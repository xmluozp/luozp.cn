@import "../../assets/styles/colors.scss";

$animation_time_page: 1000ms;

/*
nav_entrance / nav_side / mobileside (control movement between entrance and inner pages)
    desktop:background (put the background of inner pages)
        avatar 
        mobile:navitems_display / mobile:navitems_hide (toggle the nav menu)
            navitems (width and styles of nav menu)
*/
/*==============================================================================*/

/*==============================================================================*/

@mixin navContainer {
  position: fixed;
  font-family: "Philosopher", sans-serif;
}
@mixin board {
  position: fixed;
  display: block;
  background-color: $color_bgdark;
  border-left: 1px solid $color_facinglight;
  box-shadow: 0px 0px 30px 0px rgba(0, 0, 0, 0.5);
  top: 0rem;
  height: 100vh;
  // background-image: url( "/images/congruent_outline.png");
}

@mixin overlay($stage: "s0") {
  position: fixed;
  display: block;
  width: 100%;
  height: 100%;
  background: rgba(230, 228, 235, 0.938);

  @if $stage == "s0" {
    opacity: 0;
  }
  @if $stage == "s1_show" {
    opacity: 1;
  }
  @if $stage == "s1_hide" {
    opacity: 0;
  }
}

/*================================ stages =======================================*/

// stages of navigation
@mixin stage0-navContainer {
  // menu
  top: 10rem;
  left: 100vw;
}
@mixin stage1-navContainer {
  top: 10rem;
  left: 100vw;
}

// stages for board
@mixin board-show {
  width: 148px;
  left: calc(100vw - 148px);
}
@mixin board-hide {
  width: 0rem;
  left: 100vw;
}
// when parent component playing
@mixin stage1-board-parentplay {
  box-shadow: 0px 0px 30px 0px rgba(0, 0, 0, 0);
}
@mixin stage1-board-parentstop {
}

// stage for navitems
@mixin navitems {
  display: block;
  box-sizing: content-box;
  white-space: nowrap;
  right: 0px;
  position: absolute;
}
@mixin state-navitems-show {
  @include navitems;
  width: 14rem;
}
@mixin state-navitems-hide {
  @include navitems;
  overflow: hidden;
  width: 0rem;
}

// when parent component playing
@mixin stage1-navitems-parentplay {
  // transform: scale(1.1, 1.1);
}
@mixin stage1-navitems-parentstop {
}

// stage for links
@mixin links {
  a {
    border-left: 4px solid rgba(255, 255, 255, 0.2);
    border-bottom: 1px solid $color_bgdeepdark;
    background-color: $color_bgmiddle;
    margin-bottom: 0.5rem;
    padding: 5pt 0pt;
    display: block;
    height: 100%;
    padding-left: 1rem;
  }
  a:hover {
    margin-left: -1rem;
  }
}
@mixin state-linkselected {
  a {
    text-decoration: none;
    font-size: 2rem;
    color: #d4d1dd;
    transition: all $animation_time_page/2 ease-in-out;
    text-shadow: 3px 1px 5px rgba(0, 0, 0, 0.5);
  }
}

@mixin state-linkregular {
  a {
    text-decoration: none;
    font-size: 1.5rem;
    color: $color_secondary;
    transition: all $animation_time_page/2 ease-in-out;
  }
  a:hover {
    color: $color_warning;
    transition-duration: 300ms;
  }
}

/*==================================== actual css structures==========================================*/

//------------ nav items with stage
.navContainer {
  &.stage0 {
    @include navContainer;
    @include stage0-navContainer;
    .navitems {
      @include state-navitems-hide;
    }
  }
  &.stage1 {
    @include navContainer;
    @include stage1-navContainer;
  }

  &.parentAnimationPlay.stage1 {
    .navitems {
      @include stage1-navitems-parentplay;
    }
  }
  &.parentAnimationStop.stage1 {
    .navitems {
      @include stage1-navitems-parentstop;
    }
  }
}

// ------------ nav items always do
.navitems {
  .state_linkselected {
    @include links;
    @include state-linkselected;
  }
  .state_linkregular {
    @include links;
    @include state-linkregular;
  }
  &.show {
    @include state-navitems-show;
  }
  &.hide {
    @include state-navitems-hide;
  }
}

// ------------ boards
.board {
  @include board;
  &.stage0 {
    @include board-hide;
  }
  &.stage1 {
    &.parentAnimationPlay.stage1 {
      @include stage1-board-parentplay;
    }
    &.parentAnimationStop.stage1 {
      @include stage1-board-parentstop;
    }
    &.show {
      @include board-show;
    }
    &.hide {
      @include board-hide;
    }
  }
}

/*==================================== animation structures==========================================*/

.show {
  transition: all $animation_time_page ease-out;
}
.hide {
  transition: all $animation_time_page ease-out;
}
// animation bind: nav hide(go to entrance)---desktop
.stage0 {
  .navitems {
    transition: all $animation_time_page/4 ease-out;
  }
}
// animation bind: nav showup--desktop
.stage1 {
  &.parentAnimationPlay,
  &.parentAnimationStop {
    &.board {
      transition: all $animation_time_page/4 ease-out;
    }
    .navitems {
      transition: all $animation_time_page/4 ease-out;
    }
  }
}

// animation nav hide(entrance)---mobile
// as same as desktop

// animation nav showup--mobile
:global(.isMobile) {
  :local {
    .navContainer {
      &.stage0 {
        .navitems {
          @include state-navitems-hide;
        }
      }
      &.stage1 {
        &.navContainer {
          background-color: transparent;
          top: 5rem;
        }

      }
    }
    .board{
      &.stage1 {
        &.show {
          @include board-show;
          width: 96px;
          left: calc(100vw - 96px);
        }
      }          
    }

    .overlay {
      &.stage0 {
        @include overlay("s0");
        transition: all $animation_time_page/4 ease-out;
      }
      &.stage1 {
        @include overlay("s1_show");
        transition: all $animation_time_page/4 ease-out;
        &.hide {
            @include overlay("s1_hide");
            transition: all $animation_time_page/4 ease-out;
        }
      }

    }
  }
}
/*==============================================================================*/
