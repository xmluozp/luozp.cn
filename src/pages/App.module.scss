$animation_time_page: 500ms;

.main {
  perspective: calc(200vh);
}
.main_lock {
  height: 100vh;
  overflow: hidden;
}
.main_unlock {
  height: auto;
}

:global {
  .page_container {
    position: unset;
    min-height: 100vh;
    // overflow: auto;
    background-color: transparent;
  }

  /* slide animation */
  .slide-in-appear {
    opacity: 1;

    transform-style: preserve-3d;
    transform: translate3D(-50vw, 50vh, 50vh) rotateX(90deg);
    transition: all $animation_time_page/2 ease-out;

    // & means .slide-in-appear.slide-in-appear-active.  if you have a space like "& .slidexxxx" it will be ".xxx .slidexxxx"
  }
  .slide-in-appear-active {
    transition: all $animation_time_page/2 ease-out;
    transform: translate3D(0, 0, 0) rotateY(0deg);
    position: absolute;
    z-index: 500;

    .page_container {
      transition: all $animation_time_page/2 ease-out;
      transform: scale(0.8, 0.8) translateX(-15vw);
      background-color: #e0e0e0;
      position: absolute;
      z-index: 500;
      height: 100vh;
      width: 100vw;
      overflow: hidden;
      box-shadow: 0px 0px 20px 0px #353535ab;
      border: 1px solid #ffffff;
    }
  }

  .slide-in-appear-done {
    transition: all $animation_time_page ease-out;

    .page_container {
      transition: all $animation_time_page/2 ease-out;
      transform: scale(1, 1) translateX(0vw);
    }
  }
  .slide-in-enter {
    @extend .slide-in-appear;
  }
  .slide-in-enter-active {
    @extend .slide-in-appear-active;
  }

  .slide-in-enter-done {
    @extend .slide-in-appear-done;
  }

  .slide-in-exit {
    opacity: 1;
    position: absolute;
    z-index: 0;
    // transform-style: preserve-3d;
    // transform: translate3D(0, 0, 0) rotateX(0deg);


    transform: scaleY(100vh) translateY(0vh);
    transition: all $animation_time_page ease-out;

    .page_container {
        position: absolute;
        z-index: 0;
        height: 100vh;
        width: 100vw;
        overflow: hidden;
        transition: all $animation_time_page/2 ease-out;
        transform: scale(0.8, 0.8) translateX(-15vw);
      }

    &.slide-in-exit-active {
      position: absolute;
      z-index: 0;
      opacity: 0;
      transform: scaleY(0) translateY(100vh);

      .page_container {
        transform: scale(1, 1) translateX(0vw);
      }

      //   transform: translate3D(100vh, 150vh, 0vh) rotateX(-90deg);
    }
  }

  //   @keyframes animation_tv_fade {
  //     10% {
  //       transform: scale(1, 0.002);
  //     }
  //     35% {
  //       transform: scale(0.2, 0.002);
  //       opacity: 1;
  //     }

  //     50% {
  //       transform: scale(0.2, 0.002);
  //       opacity: 0;
  //     }
  //     85% {
  //       transform: scale(1, 0.002);
  //       opacity: 1;
  //     }
  //     100% {
  //       transform: scale(1, 1);
  //     }
  //   }
}
